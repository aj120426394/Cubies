// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.IO.Ports;


public class SerialConn
{
	private SerialPort sp;

	public SerialConn ()
	{
		this.sp = new SerialPort ("/dev/cu.usbmodem330471", 9600);
		//this.sp.ReadTimeout = 1;

		OpenConnection();

	}

	private void OpenConnection() 
	{
		if (sp != null) 
		{
			if (sp.IsOpen) 
			{
				sp.Close();
				Debug.Log("Closing port, because it was already open!");


			}
			else 
			{
				sp.Open();  // opens the connection
				sp.ReadTimeout = 30;  // sets the timeout value before reporting error
				Debug.Log("Port Opened!");
				//		message = "Port Opened!";
			}
		}
		else 
		{
			if (sp.IsOpen)
			{
				Debug.Log("Port is already open");
			}
			else 
			{
				Debug.Log("Port == null");
			}
		}
	}

	public string recieveData(){
		string data = "";
		if (sp.IsOpen) {
			try {
				data = this.sp.ReadLine ();
				//Debug.Log ("DEBUGG - In coming data: " + data);
			} catch (Exception e) {
				//Debug.Log ("Exception: " + e);
			}
		}
		return data;
	}

	public void sendData(string data){
		/*
		string sendData = "";
		if (data.Contains ("red")) {
			sendData = "r";
		} else if (data.Contains ("blue")) {
			sendData = "b";
		} else if (data.Contains ("yellow")) {
			sendData = "y";
		} else if (data.Contains ("green")) {
			sendData = "g";
		}
		this.sp.WriteLine (sendData);
		*/
		this.sp.WriteLine (data);
		Debug.Log(data);
	}

	public void broadcastData(int numOfClient, string command){
		for (int i = 0; i < numOfClient; i++) {
			string clientName = "C" + (i+1);
			string data = clientName + ":" + command;
			this.sp.WriteLine (data);
			Debug.Log(data);
		}

	}
}


